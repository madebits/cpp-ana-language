// http://www.cc.gatech.edu/classes/cs3158_98_fall/lcs.html
// Longest Common Subsequence

program LCS
{
	int N = 0, NW = 1, W = 2;

	// arrays cannot be returned from functions
	int lcs(int X[], int Y[])
	{

		int m = len(X);
		int n = len(Y);
		int c[m, n];
		int i, j;
	
		// not really necessary in AnA, as arrays are inited to zero
		
		//for(i = 1; | i < m | i = i + 1;)
		//	c[i, 0] = 0;
		//for(j = 1; | j < n | j = j + 1;)
		//	c[0,j] = 0;
	
		
		for(i = 1; | i < m | i = i + 1;)
			for(j = 1; | j < n | j = j + 1;)
				if (X[i] == Y[j]) {
					c[i,j] = c[i-1,j-1] + 1;
				}
				else if (c[i-1,j] >= c[i,j-1]) {
					c[i,j] = c[i-1,j];
				}
				else {
					c[i,j] = c[i,j-1];
				}
		return c[m - 1, n - 1];
	}
	
	void main()
	{
		int X[6] = {0,1,2,3,4,4};
		int Y[5] = {1,2,3,4,5};
		
		print(X);
		print(Y);
		nl();
		print("Longest common subsequence length: ");
		print(lcs(X, Y));
	}

}